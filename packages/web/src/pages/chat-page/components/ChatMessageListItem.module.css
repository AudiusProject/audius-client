.root {
  display: flex;
  flex-direction: column;
  gap: var(--unit-2);
  align-items: flex-start;
}

.root.isAuthor {
  align-items: flex-end;
}

.bubble {
  --bubble-color: var(--white);
  position: relative;
  z-index: 1;
  display: inline-block;
  max-width: 448px;
  border-radius: var(--unit-3);
  filter: var(--drop-shadow-near);
  color: var(--static-netural);
  background-color: var(--bubble-color);
  transition: background-color var(--calm), filter var(--calm);
}

.text a {
  color: var(--neutral);
  text-decoration: underline !important;
}

.bubble:not(.nonInteractive):hover {
  --bubble-color: var(--neutral-light-10);
  filter: var(--drop-shadow-far);
}

.isAuthor .bubble {
  color: var(--static-white);
  --bubble-color: var(--secondary-light-2);
}

.isAuthor .text a {
  color: var(--static-white);
}

.isAuthor .bubble:hover {
  --bubble-color: var(--secondary-light-1);
}

.text {
  padding: var(--unit-4);
  white-space: pre-wrap;
  word-break: break-word;
  text-align: left;
  line-height: 150%;
  user-select: text;
}

:not(.isAuthor) .linkPreview {
  border-bottom: 1px solid var(--neutral-light-7);
}

.isAuthor .linkPreview {
  border-bottom: 1px solid var(--secondary-dark-1);
}

.meta {
  font-size: var(--font-xs);
  color: var(--neutral-light-2);
  margin-bottom: var(--unit-4);
}

.reactionsButton {
  display: flex;
  opacity: 0;
  flex-direction: row-reverse;
  align-items: center;
  justify-content: center;
  position: absolute;
  cursor: pointer;
  bottom: -24px;
  /* transform looks better if it only eases-out */
  transition: opacity var(--quick), transform 0.07s ease-out;
  transform: scale(0.5);
}

.reactionsButton:not(.hasReaction) {
  background-color: var(--white);
  border: 1px solid var(--neutral-light-6);
  width: var(--unit-8);
  height: var(--unit-8);
  bottom: -16px;
  border-radius: 50%;
}

.root.isAuthor .reactionsButton {
  left: -16px;
}
.root:not(.isAuthor) .reactionsButton {
  right: -16px;
  direction: rtl;
}

.root.isAuthor .reactionsButton.hasReaction {
  left: -24px;
}

.root:not(.isAuthor) .reactionsButton.hasReaction {
  right: -24px;
}

.bubble:hover .reactionsButton,
.reactionsButton.isOpened,
.reactionsButton.hasReaction {
  transform: scale(1, 1);
  opacity: 1;
}

.reactionsButton:not(.hasReaction) path {
  width: var(--unit-6);
  height: var(--unit-6);
  fill: var(--secondary);
  transition: fill var(--quick);
}

.reactionsButton:not(.hasReaction):hover {
  transform: scale(1.1);
}

.reactionsButton:not(.hasReaction):hover path {
  fill: var(--secondary-dark-2);
}

.reactionsButton:not(.hasReaction):active {
  transform: scale(0.6);
}

.reactionEmoji {
  margin-inline-end: -28px;
  filter: drop-shadow(-2px 0px 4px rgba(0, 0, 0, 0.15));
}

.reactionEmoji:hover {
  transform: scale(1.1);
}

.reactionEmoji:active {
  transform: scale(0.6);
}

.tail {
  display: flex;
  position: absolute;
  bottom: 0;
}

.tail svg * {
  fill: var(--bubble-color);
  transition: fill var(--quick);
}

.root:not(.isAuthor) .tail {
  transform: scaleX(-1);
  left: -7px;
}

.root.isAuthor .tail {
  right: -7px;
}

.error {
  display: flex;
  align-items: center;
  gap: var(--unit-1);

  color: var(--accent-red);
}

.error:hover {
  cursor: pointer;
}

.error svg {
  width: var(--unit-3);
  height: var(--unit-3);
}

.error svg path {
  fill: var(--accent-red);
}
