{
  "name": "audius-client",
  "productName": "Audius",
  "description": "The Audius decentralized application",
  "author": "Audius",
  "version": "1.3.12",
  "private": true,
  "scripts": {
    "publish-scripts": "./scripts/publishScripts.sh",
    "start": "craco --max-old-space-size=8076 start",
    "start:dev": "npm run write-sha && npm run publish-scripts && env-cmd --no-override ./.env/.env.dev npm start",
    "start:stage": "npm run write-sha && npm run publish-scripts && env-cmd --no-override ./.env/.env.stage npm start",
    "start:prod": "npm run write-sha && npm run publish-scripts && env-cmd --no-override ./.env/.env.prod npm start",
    "prebuild": "npm run publish-scripts",
    "build": "craco --max-old-space-size=8076 build",
    "build:dev": "npm run write-sha && env-cmd ./.env/.env.dev npm run build && rm -rf build-development && mv build build-development",
    "build:stage": "npm run write-sha && env-cmd ./.env/.env.stage npm run build && rm -rf build-staging && mv build build-staging",
    "build:prod": "npm run write-sha && env-cmd ./.env/.env.prod npm run build && rm -rf build-production && mv build build-production",
    "build:prod-source-maps": "npm run write-sha && env-cmd ./.env/.env.prod env-cmd ./.env/.env.source-maps npm run build && rm -rf build-production && mv build build-production",
    "test": "craco test --resetMocks=false",
    "test:coverage": "craco test --resetMocks=false --coverage  --watchAll=false",
    "eject": "react-scripts eject",
    "lint:fix": "eslint --cache --fix --ext=js,jsx,ts,tsx src",
    "lint": "eslint --cache --ext=js,jsx,ts,tsx src",
    "stylelint": "stylelint 'src/**/*.css'",
    "stylelint:fix": "npm run stylelint -- --fix",
    "electron:stage": "electron . staging",
    "electron:prod": "electron . production",
    "electron:localhost": "electron . localhost",
    "pack": "electron-builder --dir",
    "dist": "node ./scripts/dist.js --mac --win --linux",
    "dist:mac": "node ./scripts/dist.js --mac",
    "dist:win": "node ./scripts/dist.js --win",
    "dist:linux": "node ./scripts/dist.js --linux",
    "dist-publish": "node ./scripts/dist.js --mac --win --linux --publish always",
    "dist-publish-production": "node ./scripts/dist.js --mac --win --linux --publish always --env production",
    "dist:mac-publish": "npm run install-dmg-license && node ./scripts/dist.js --mac --publish always",
    "dist:win-publish": "node ./scripts/dist.js --win --publish always",
    "dist:linux-publish": "node ./scripts/dist.js --linux --publish always",
    "dist:win:linux-publish": "node ./scripts/dist.js --win --linux --publish always",
    "dist:mac-publish-production": "npm run install-dmg-license && node ./scripts/dist.js --mac --publish always --env production",
    "dist:win-publish-production": "node ./scripts/dist.js --win --publish always --env production",
    "dist:linux-publish-production": "node ./scripts/dist.js --linux --publish always --env production",
    "dist:win:linux-publish-production": "node ./scripts/dist.js --win --linux --publish always --env production",
    "write-sha": "./scripts/writeSHA.sh",
    "analyze": "source-map-explorer build-production/static/js/*.js",
    "analyzeBundle": "env-cmd ./.env/.env.bundle npm run build:prod",
    "typecheck": "tsc",
    "typecheck:watch": "tsc --watch",
    "install-dmg-license": "npx lerna add dmg-license --scope=audius-client --no-bootstrap && npx lerna bootstrap --no-ci"
  },
  "dependencies": {
    "@audius/common": "1.3.12",
    "@audius/sdk": "1.0.20",
    "@audius/stems": "1.3.11",
    "@coinbase/cbpay-js": "1.2.0",
    "@craco/craco": "7.0.0-alpha.3",
    "@fingerprintjs/fingerprintjs-pro": "3.5.6",
    "@hcaptcha/react-hcaptcha": "0.3.6",
    "@juggle/resize-observer": "^3.3.1",
    "@jup-ag/core": "2.0.0-beta.3",
    "@opentelemetry/api": "^1.2.0",
    "@opentelemetry/context-zone": "^1.6.0",
    "@opentelemetry/exporter-trace-otlp-http": "0.32.0",
    "@opentelemetry/instrumentation": "0.32.0",
    "@opentelemetry/instrumentation-document-load": "0.30.0",
    "@opentelemetry/instrumentation-fetch": "0.32.0",
    "@opentelemetry/instrumentation-user-interaction": "0.31.0",
    "@opentelemetry/instrumentation-xml-http-request": "0.32.0",
    "@opentelemetry/resources": "1.6.0",
    "@opentelemetry/sdk-trace-web": "1.6.0",
    "@opentelemetry/semantic-conventions": "1.6.0",
    "@optimizely/optimizely-sdk": "4.0.0",
    "@project-serum/sol-wallet-adapter": "0.2.5",
    "@reduxjs/toolkit": "1.3.4",
    "@sentry/browser": "6.16.1",
    "@sentry/integrations": "6.16.1",
    "@solana/spl-token": "0.1.8",
    "@solana/web3.js": "1.53.0",
    "@walletconnect/web3-provider": "1.4.1",
    "amplitude-js": "8.10.0",
    "antd": "4.20.6",
    "array-pack-2d": "0.1.1",
    "array-range": "1.0.1",
    "bitski": "0.10.9",
    "bn.js": "4.11.6",
    "body-scroll-lock": "2.7.1",
    "canvas-loop": "1.0.7",
    "chart.js": "2.9.3",
    "clamp": "1.0.1",
    "classnames": "2.2.6",
    "connected-react-router": "6.8.0",
    "dayjs": "1.10.7",
    "electron-log": "3.0.9",
    "electron-updater": "4.3.5",
    "fxa-common-password-list": "0.0.2",
    "gl-audio-analyser": "1.0.3",
    "gl-buffer": "2.1.2",
    "gl-mat4": "1.2.0",
    "gl-quad": "1.1.3",
    "gl-shader": "4.2.1",
    "gl-shader-core": "2.2.0",
    "gl-vao": "1.3.0",
    "glsl-noise": "0.0.0",
    "glsl-random": "0.0.4",
    "glslify-loader": "1.0.2",
    "hashids": "2.2.1",
    "hex-rgb": "1.0.0",
    "history": "4.10.1",
    "hls.js": "0.13.2",
    "idb-keyval": "3.2.0",
    "inherits": "2.0.4",
    "jimp": "0.6.8",
    "js-yaml": "3.13.1",
    "jsmediatags": "3.8.1",
    "lerp": "1.0.3",
    "linkifyjs": "2.1.9",
    "lodash": "4.17.21",
    "numeral": "2.0.6",
    "orbit-controls": "0.0.1",
    "perspective-camera": "2.0.1",
    "pixi.js": "4.8.9",
    "prop-types": "15.7.2",
    "query-string": "6.13.5",
    "raw-loader": "0.5.1",
    "react": "17.0.2",
    "react-beautiful-dnd": "10.0.4",
    "react-chartjs-2": "2.9.0",
    "react-dates": "18.5.0",
    "react-dom": "17.0.2",
    "react-dropzone": "6.2.4",
    "react-error-boundary": "3.1.4",
    "react-helmet": "5.2.1",
    "react-infinite-scroller": "1.2.4",
    "react-lottie": "1.2.3",
    "react-markdown": "4.3.1",
    "react-redux": "7.2.0",
    "react-router-dom": "5.1.2",
    "react-router-last-location": "2.0.1",
    "react-scripts": "5.0.0",
    "react-scroll-parallax": "2.3.2",
    "react-spring": "8.0.27",
    "react-table": "7.8.0",
    "react-twitter-auth": "0.0.13",
    "react-twitter-embed": "3.0.3",
    "react-use": "15.3.8",
    "react-use-gesture": "7.0.0-beta.5",
    "react-use-measure": "2.1.1",
    "react-virtualized": "9.22.3",
    "redux": "4.0.5",
    "redux-devtools-extension": "2.13.8",
    "redux-saga": "1.1.3",
    "redux-sentry-middleware": "0.1.8",
    "reselect": "4.0.0",
    "scrollbar-width": "3.1.1",
    "semver": "6.3.0",
    "tar": "6.1.11",
    "typed-redux-saga": "1.3.1",
    "typesafe-actions": "5.1.0",
    "walletlink": "2.0.3",
    "wasm-loader": "1.3.0",
    "web-vitals": "0.2.2",
    "web3modal": "1.9.3",
    "webgl-context": "2.2.0",
    "webpack-bundle-analyzer": "4.5.0"
  },
  "main": "src/electron.js",
  "build": {
    "extends": null
  },
  "standard": {
    "parser": "babel-eslint",
    "env": [
      "jest"
    ],
    "ignore": [
      "src/utils/visualizer/gl-vignette-background",
      "public/analytics/"
    ]
  },
  "browserslist": [
    ">0.2%",
    "not dead",
    "not ie <= 11",
    "not op_mini all"
  ],
  "devDependencies": {
    "@babel/plugin-transform-react-jsx": "7.16.7",
    "@pinata/sdk": "1.1.13",
    "@svgr/webpack": "5.5.0",
    "@testing-library/react": "12.0.0",
    "@types/amplitude-js": "8.0.2",
    "@types/bn.js": "4.11.6",
    "@types/body-scroll-lock": "2.6.1",
    "@types/classnames": "2.2.10",
    "@types/hls.js": "0.13.0",
    "@types/jest": "24.9.1",
    "@types/js-yaml": "3.12.4",
    "@types/jsmediatags": "3.9.1",
    "@types/linkifyjs": "2.1.3",
    "@types/lodash": "4.14.149",
    "@types/node": "12.12.35",
    "@types/numeral": "^2.0.2",
    "@types/react": "17.0.2",
    "@types/react-beautiful-dnd": "11.0.5",
    "@types/react-dom": "17.0.2",
    "@types/react-helmet": "5.0.15",
    "@types/react-infinite-scroller": "1.2.1",
    "@types/react-lottie": "1.2.3",
    "@types/react-native-push-notification": "3.0.8",
    "@types/react-redux": "7.1.7",
    "@types/react-router-dom": "5.3.3",
    "@types/react-table": "7.7.12",
    "@types/react-virtualized": "9.21.21",
    "@types/redux-saga": "0.10.5",
    "@types/redux-sentry-middleware": "0.2.1",
    "@types/resize-observer-browser": "0.1.7",
    "@types/webpack-bundle-analyzer": "4.4.1",
    "@types/webpack-env": "1.17.0",
    "abort-controller": "3.0.0",
    "assert": "^2.0.0",
    "babel-plugin-lodash": "3.3.4",
    "babel-plugin-macros": "3.1.0",
    "base64url": "3.0.1",
    "browserify-zlib": "0.2.0",
    "buffer": "6.0.3",
    "commander": "2.20.3",
    "constants-browserify": "^1.0.0",
    "crypto-browserify": "^3.12.0",
    "electron": "12.0.9",
    "electron-builder": "23.0.3",
    "electron-notarize": "0.1.1",
    "env-cmd": "8.0.2",
    "eslint": "8.19.0",
    "eslint-config-audius": "1.3.11",
    "fetch-mock": "9.9.1",
    "fs": "0.0.1-security",
    "fs-extra": "8.1.0",
    "https-browserify": "^1.0.0",
    "net-browserify": "^0.2.4",
    "node-fetch": "2.6.1",
    "os-browserify": "^0.3.0",
    "path-browserify": "^1.0.1",
    "process": "^0.11.10",
    "redux-saga-test-plan": "4.0.4",
    "source-map-explorer": "2.4.2",
    "stream-browserify": "^3.0.0",
    "stream-http": "^3.2.0",
    "stylelint": "14.3.0",
    "stylelint-config-css-modules": "2.3.0",
    "stylelint-config-prettier": "9.0.3",
    "stylelint-config-standard": "24.0.0",
    "stylelint-prettier": "2.0.0",
    "terser": "4.8.0",
    "tls": "0.0.1",
    "tls-browserify": "^0.2.2",
    "typescript": "4.8.4",
    "typescript-plugin-css-modules": "^3.4.0",
    "url": "^0.11.0",
    "util": "^0.12.4",
    "webpack": "5.73.0"
  },
  "jest": {
    "coverageReporters": [
      "text",
      "html"
    ],
    "transformIgnorePatterns": [
      "<rootDir>/node_modules/(?!hashids)"
    ],
    "moduleNameMapper": {
      "^react$": "<rootDir>/node_modules/react",
      "^react-redux$": "<rootDir>/node_modules/react-redux",
      "^hashid$": "<rootDir>/node_modules/hashids"
    }
  }
}
