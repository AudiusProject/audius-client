diff --git a/node_modules/react-native-code-push/android/codepush.gradle b/node_modules/react-native-code-push/android/codepush.gradle
index 22be273..7750c7c 100644
--- a/node_modules/react-native-code-push/android/codepush.gradle
+++ b/node_modules/react-native-code-push/android/codepush.gradle
@@ -25,6 +25,10 @@ gradle.projectsEvaluated {
     }
     
     android.applicationVariants.all { variant ->
+        // skip debug build variant
+        if (variant.buildType.name == "debug") {
+            return;
+        }
         def nodeModulesPath;
         if (config.root) {
             nodeModulesPath = Paths.get(config.root, "/node_modules");
@@ -48,10 +52,10 @@ gradle.projectsEvaluated {
         // Make this task run right after the bundle task
         def generateBundledResourcesHash;
 
-        if (variant.hasProperty("bundleJsAndAssets")) {
-            def reactBundleTask = variant.bundleJsAndAssets
-            jsBundleDir = reactBundleTask.generatedAssetsFolders[0].absolutePath
-            resourcesDir = reactBundleTask.generatedResFolders[0].absolutePath
+        def reactBundleTask = tasks.findByName("createBundle${targetName}JsAndAssets")
+        if (reactBundleTask) {
+            jsBundleDir = reactBundleTask.property('jsBundleDir').asFile.get()
+            resourcesDir = reactBundleTask.property('resourcesDir').asFile.get()
             jsBundleFile = file("$jsBundleDir/$bundleAssetName")
 
             generateBundledResourcesHash = tasks.create(
@@ -107,7 +111,7 @@ gradle.projectsEvaluated {
             generateBundledResourcesHash.dependsOn("recordFilesBeforeBundleCommand${targetName}")
         }
 
-        generateBundledResourcesHash.dependsOn("bundle${targetName}JsAndAssets")
+        generateBundledResourcesHash.dependsOn("createBundle${targetName}JsAndAssets")
         runBefore("processArmeabi-v7a${targetName}Resources", generateBundledResourcesHash)
         runBefore("processX86${targetName}Resources", generateBundledResourcesHash)
         runBefore("processUniversal${targetName}Resources", generateBundledResourcesHash)
