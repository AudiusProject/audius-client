version: 2.1

orbs:
  ruby: circleci/ruby@0.2.1

jobs:
  init:
    working_directory: ~/react-native-wrapper
    docker:
      - image: circleci/node:14.18
    steps:
      - checkout
      - run:
          name: copy staging env
          command: |
            cp .env.stage.tmpl .env.stage
            echo "FCM_SENDER_ID=$FCM_SENDER_ID" >> .env.stage
            echo "AMPLITUDE_WRITE_KEY=$AMPLITUDE_WRITE_KEY_STAGE" >> .env.stage
      - run:
          name: copy production env
          command: |
            cp .env.prod.tmpl .env.prod
            echo "FCM_SENDER_ID=$FCM_SENDER_ID" >> .env.prod
            echo "AMPLITUDE_WRITE_KEY=$AMPLITUDE_WRITE_KEY_PROD" >> .env.prod
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependency-cache-
      - run: npm install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: typecheck
          command: npm run typecheck
      - run:
          name: lint
          command: npm run lint
      - persist_to_workspace:
          root: ./
          paths:
            - node_modules
            - .env.stage
            - .env.prod

  build-web-app:
    working_directory: ~/react-native-wrapper
    docker:
      - image: circleci/node:14.18
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: copy-audius-client
          # client is copied outside of project to avoid npm install conflicts
          command: cp -R ./node_modules/audius-client ../audius-client

      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "../audius-client/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependency-cache-
      - run: cd ../audius-client && npm install

      - save_cache:
          key: dependency-cache-{{ checksum "../audius-client/package.json" }}
          paths:
            - ../audius-client/node_modules

      - run:
          name: build-production-web-app
          command: cd ../audius-client && npm run build:mobile-prod
      - persist_to_workspace:
          root: ../
          paths:
            - audius-client/build-mobile-production

  build-staging-web-app:
    working_directory: ~/react-native-wrapper
    docker:
      - image: circleci/node:14.18
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: copy-audius-client
          # client is copied outside of project to avoid npm install conflicts
          command: cp -R ./node_modules/audius-client ../audius-client

      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "../audius-client/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependency-cache-
      - run: cd ../audius-client && npm install

      - save_cache:
          key: dependency-cache-{{ checksum "../audius-client/package.json" }}
          paths:
            - ../audius-client/node_modules

      - run:
          name: build-staging-web-app
          command: cd ../audius-client && npm run build:mobile-stage
      - persist_to_workspace:
          root: ../
          paths:
            - audius-client/build-mobile-staging

  upload-staging-ios:
    working_directory: ~/react-native-wrapper
    macos: # Run on osx so app can be created and signed.
      xcode: '12.2.0'
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: bounce
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Move Staging build
          command: mkdir -p web-app/Web.bundle/build && mv ./audius-client/build-mobile-staging/* web-app/Web.bundle/build
      - run:
          name: Set Ruby Version
          command: echo 'chruby ruby-2.6' >> ~/.bash_profile
      - run:
          name: update cocoapods
          command: sudo gem install cocoapods
      - run:
          name: copy bundle
          command: npm run bundle:ios

      - run:
          name: install pods
          command: cd ios && pod install
      - restore_cache:
          key: 1-gems-{{ checksum "ios/Gemfile.lock" }}
      - run: cd ios && (bundle check || bundle install --path vendor/bundle)
      - save_cache:
          key: 1-gems-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor/bundle

      - run:
          name: update fastlane
          command: cd ios && bundle update fastlane
      - run:
          name: fastlane
          command: cp .env.stage ios/ && cd ios && bundle exec fastlane $FASTLANE_LANE
      - store_artifacts:
          path: output
      - store_test_results:
          path: output/scan

  upload-ios:
    working_directory: ~/react-native-wrapper
    macos: # Run on osx so app can be created and signed.
      xcode: '12.2.0'
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: beta
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Move production build
          command: mkdir -p web-app/Web.bundle/build && mv ./audius-client/build-mobile-production/* web-app/Web.bundle/build
      - run:
          name: Set Ruby Version
          command: echo 'chruby ruby-2.6' >> ~/.bash_profile
      - run:
          name: update cocoapods
          command: sudo gem install cocoapods
      - run:
          name: copy bundle
          command: npm run bundle:ios

      - run:
          name: install pods
          command: cd ios && pod install
      - restore_cache:
          key: 1-gems-{{ checksum "ios/Gemfile.lock" }}
      - run: cd ios && (bundle check || bundle install --path vendor/bundle)
      - save_cache:
          key: 1-gems-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor/bundle

      - run:
          name: update fastlane
          command: cd ios && bundle update fastlane
      - run:
          name: fastlane
          command: cp .env.prod ios/ && cd ios && bundle exec fastlane $FASTLANE_LANE
      - store_artifacts:
          path: output
      - store_test_results:
          path: output/scan

  upload-staging-android:
    working_directory: ~/react-native-wrapper
    docker:
      - image: circleci/android:api-30-node
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Set Ruby Version
          command: echo 'chruby ruby-2.6' >> ~/.bash_profile
      - run:
          name: Move Staging build
          command: mkdir -p web-app/Web.bundle/build && mv ./audius-client/build-mobile-staging/* web-app/Web.bundle/build
      - run:
          name: migrate support libraries for androidX packages
          command: |
            npm run jetifier
      - restore_cache:
          key: 1-gems-{{ checksum "android/Gemfile.lock" }}
      - run: cd android && (bundle check || bundle install --path vendor/bundle)
      - save_cache:
          key: 1-gems-{{ checksum "android/Gemfile.lock" }}
          paths:
            - android/vendor/bundle
      - run:
          name: fetch app fastlane json config to upload to play store
          command: |
            echo "$FASTLANE_PLAYSTORE_JSON" > android/app/api.txt
            base64 --decode android/app/api.txt > android/app/api.json
      - run:
          name: increment version code
          command: |
            cd android
            bundle exec fastlane incrementVersionCode package_name:co.audius.app.bounce track:alpha
            bundle exec fastlane incrementVersionName package_name:co.audius.app.bounce track:alpha
      - run:
          name: generating the staging release apk & bundle
          command: |
            echo "yes" | sdkmanager "platforms;android-30" && cd android && ./gradlew bundleBounceRelease
      - run:
          name: install-awscli
          command: sudo pip install awscli
      - run: aws s3 sync ~/react-native-wrapper/android/app/build/outputs s3://audius-mobile-staging/android --delete
      - run:
          name: Upload to Play Store
          command: cd android && bundle exec fastlane bounce

  upload-android:
    resource_class: large
    working_directory: ~/react-native-wrapper
    docker:
      - image: circleci/android:api-30-node
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Set Ruby Version
          command: echo 'chruby ruby-2.6' >> ~/.bash_profile
      - run:
          name: Move production build
          command: mkdir -p web-app/Web.bundle/build && mv ./audius-client/build-mobile-production/* web-app/Web.bundle/build
      - run:
          name: migrate support libraries for androidX packages
          command: |
            npm run jetifier
      - restore_cache:
          key: 1-gems-{{ checksum "android/Gemfile.lock" }}
      - run: cd android && (bundle check || bundle install --path vendor/bundle)
      - save_cache:
          key: 1-gems-{{ checksum "android/Gemfile.lock" }}
          paths:
            - android/vendor/bundle
      - run:
          name: fetch app fastlane json config to upload to play store
          command: |
            echo "$FASTLANE_PLAYSTORE_JSON" > android/app/api.txt
            base64 --decode android/app/api.txt > android/app/api.json
      - run:
          name: increment version code
          command: |
            cd android
            bundle exec fastlane incrementVersionCode package_name:co.audius.app track:alpha
            bundle exec fastlane incrementVersionName package_name:co.audius.app track:alpha
      - run:
          name: generating the release apk & bundle
          command: |
            echo "yes" | sdkmanager "platforms;android-30" && cd android && ./gradlew bundleRelease
      - run:
          name: install-awscli
          command: sudo pip install awscli
      - run: aws s3 sync ~/react-native-wrapper/android/app/build/outputs s3://audius-mobile/android --delete
      - run:
          name: Upload to Play Store
          command: cd android && bundle exec fastlane alpha

workflows:
  version: 2
  build-upload:
    jobs:
      - init:
          context: Audius Mobile Client

      - build-web-app:
          context: Audius Mobile Client
          requires:
            - init
          filters:
            branches:
              only: /(^release.*)$/

      - build-staging-web-app:
          context: Audius Mobile Client
          requires:
            - init
          filters:
            branches:
              only: /(^release.*)$/

      - upload-staging-ios:
          context: Audius Mobile Client
          requires:
            - build-staging-web-app
          filters:
            branches:
              only: /(^release.*)$/

      - upload-staging-android:
          context: Audius Mobile Client
          requires:
            - build-staging-web-app
          filters:
            branches:
              only: /(^release.*)$/

      - upload-ios:
          context: Audius Mobile Client
          requires:
            - build-web-app
          filters:
            branches:
              only: /(^release.*)$/

      - upload-android:
          context: Audius Mobile Client
          requires:
            - build-web-app
          filters:
            branches:
              only: /(^release.*)$/
