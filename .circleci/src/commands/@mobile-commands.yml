# Build the audius-web-client to be bundled with the mobile client
mobile-build-web-app:
  parameters:
    build-type:
      default: "mobile-prod"
      type: string
    build-directory:
      default: "build-mobile-production"
      type: string
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - restore_cache:
        keys:
          - dependency-cache-{{ checksum "packages/audius-web-client/package-lock.json" }}
          # fallback to using the latest cache if no exact match is found
          - dependency-cache-
    - run: cd packages/audius-web-client && npm ci
    - save_cache:
        key: dependency-cache-{{ checksum "packages/audius-web-client/package-lock.json" }}
        paths:
          - packages/audius-web-client/node_modules
    - run:
        name: build
        command: cd packages/audius-web-client && npm run build:<<parameters.build-type>>
    - persist_to_workspace:
        root: ./
        paths:
          - packages/audius-web-client

# Build the ios app
mobile-build-ios:
  parameters:
    build-directory:
      default: "build-mobile-production"
      type: string
    bundle-id:
      default: "co.audius.audiusmusic"
      type: string
    env:
      default: ".env.prod"
      type: string
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: Move Web App build
        command: mkdir -p web-app/Web.bundle/build && mv packages/audius-web-client/<<parameters.build-directory>>/* web-app/Web.bundle/build
    - run:
        name: update cocoapods
        command: sudo gem install cocoapods
    - run:
        name: copy bundle
        command: cd packages/audius-mobile-client && npm run bundle:ios
    - run:
        name: Install Sentry CLI
        command: |
          curl -sL https://sentry.io/get-cli/ | bash
          echo export SENTRY_BINARY=/usr/local/bin/sentry-cli >> "$BASH_ENV"
    - run:
        name: install pods
        command: cd packages/audius-mobile-client/ios && pod install
    - run:
        name: update bundler
        command: gem install bundler:1.17.3
    - restore_cache:
        key: 1-gems-{{ checksum "ios/Gemfile.lock" }}
    - run: cd packages/audius-mobile-client/ios && (bundle check || bundle install --path vendor/bundle)
    - save_cache:
        key: 1-gems-{{ checksum "packages/audius-mobile-client/ios/Gemfile.lock" }}
        paths:
          - packages/audius-mobile-client/ios/vendor/bundle
    - run:
        name: update fastlane
        command: cd packages/audius-mobile-client/ios && bundle update fastlane
    - run:
        name: fastlane build
        command: cp <<parameters.env>> packages/audius-mobile-client/ios/ && cd packages/audius-mobile-client/ios && bundle exec fastlane build bundle_id:<<parameters.bundle-id>>
    - store_artifacts:
        path: packages/audius-mobile-client/output
    - store_test_results:
        path: packages/audius-mobile-client/output/scan

# Upload the ios app to the App Store
mobile-upload-ios:
  parameters:
    bundle-id:
      default: "co.audius.audiusmusic"
      type: string
  steps:
    - run:
        name: fastlane upload
        command: cd packages/audius-mobile-client/ios && bundle exec fastlane upload bundle_id:<<parameters.bundle-id>>

# Build the android app
mobile-build-android:
  parameters:
    build-directory:
      default: "build-mobile-production"
      type: string
    build-type:
      default: "bundleRelease"
      type: string
    bundle-id:
      default: "co.audius.app"
      type: string
    track:
      default: "beta"
      type: string
    remote-directory:
      default: "audius-mobile"
      type: string
  steps:
    - checkout
    - attach_workspace:
        at: ./
    - run:
        name: Move Web App build
        command: mkdir -p web-app/Web.bundle/build && mv packages/audius-web-client/<<parameters.build-directory>>/* web-app/Web.bundle/build
    - run:
        name: migrate support libraries for androidX packages
        command: |
          cd packages/audius-mobile-client && npm run jetifier
    - run:
        name: update bundler
        command: gem install bundler:1.17.3
    - restore_cache:
        key: 1-gems-{{ checksum "packages/audius-mobile-client/android/Gemfile.lock" }}
    - run: cd packages/audius-mobile-client/android && (bundle check || bundle install --path vendor/bundle)
    - save_cache:
        key: 1-gems-{{ checksum "packages/audius-mobile-client/android/Gemfile.lock" }}
        paths:
          - packages/audius-mobile-client/android/vendor/bundle
    - run:
        name: fetch app fastlane json config to upload to play store
        command: |
          echo "$FASTLANE_PLAYSTORE_JSON" > packages/audius-mobile-client/android/app/api.txt
          base64 --decode packages/audius-mobile-client/android/app/api.txt > packages/audius-mobile-client/android/app/api.json
    - run:
        name: increment version code
        command: |
          cd packages/audius-mobile-client/android
          bundle exec fastlane incrementVersionCode package_name:<<parameters.bundle-id>> track:<<parameters.track>>
          bundle exec fastlane incrementVersionName package_name:<<parameters.bundle-id>> track:<<parameters.track>>
    - run:
        name: generating the release apk & bundle
        command: |
          echo "yes" | sdkmanager "platforms;android-30" && cd packages/audius-mobile-client/android && ./gradlew <<parameters.build-type>>
    - run:
        name: install-awscli
        command: sudo pip install awscli
    - run: aws s3 sync packages/audius-mobile-client/android/app/build/outputs s3://<<parameters.remote-directory>>/android --delete

# Upload the android app to the Google Play Store
mobile-upload-android:
  parameters:
    upload-type:
      default: "prod"
      type: string
  steps:
    - run:
        name: Upload to Play Store
        command: cd packages/audius-mobile-client/android && bundle exec fastlane <<parameters.upload-type>>
