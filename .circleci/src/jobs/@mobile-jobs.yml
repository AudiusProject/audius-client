mobile-init:
  working_directory: ~/audius-client
  docker:
    - image: circleci/node:14.18
  steps:
    - checkout
    - run:
        name: copy staging env
        command: |
          cd packages/mobile
          echo "FCM_SENDER_ID=$FCM_SENDER_ID" >> .env.stage
          echo "AMPLITUDE_WRITE_KEY=$AMPLITUDE_WRITE_KEY_STAGE" >> .env.stage
    - run:
        name: copy production env
        command: |
          cd packages/mobile
          echo "FCM_SENDER_ID=$FCM_SENDER_ID" >> .env.prod
          echo "AMPLITUDE_WRITE_KEY=$AMPLITUDE_WRITE_KEY_PROD" >> .env.prod

    - create_concatenated_package_lock:
        filename: combined-package-lock.txt

    - create_concatenated_patch_file:
        filename: combined-patch-file.txt

    - restore_cache:
        keys:
          - cache-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}-{{ checksum "combined-patch-file.txt" }}

    - restore_cache:
        keys:
          - cache-{{ .Revision }}

    - run:
        name: Link packages
        command: |
          npm run link

    - run:
        name: typecheck
        command: cd packages/mobile && npm run typecheck

    - run:
        name: lint
        command: cd packages/mobile && npm run lint

    - persist_to_workspace:
        root: ./
        paths:
          - packages/web/node_modules
          - packages/mobile/node_modules
          - packages/stems/node_modules
          - packages/stems/dist
          - packages/common/node_modules
          - packages/common/dist
          - packages/mobile/.env.stage
          - packages/mobile/.env.prod

mobile-build-upload-staging-ios:
  working_directory: ~/audius-client
  macos: # Run on osx so app can be created and signed.
    xcode: '14.0.0'
  environment:
    FL_OUTPUT_DIR: output
  shell: /bin/bash --login -o pipefail
  steps:
    - mobile-build-ios:
        build-directory: 'build-mobile-staging'
        bundle-id: 'co.audius.audiusmusic.staging'
        env: '.env.stage'
    - when:
        condition:
          matches: { pattern: '^main$', value: << pipeline.git.branch >> }
        steps:
          - mobile-upload-ios:
              bundle-id: 'co.audius.audiusmusic.staging'

mobile-build-upload-production-ios:
  working_directory: ~/audius-client
  macos: # Run on osx so app can be created and signed.
    xcode: '14.0.0'
  environment:
    FL_OUTPUT_DIR: output
  shell: /bin/bash --login -o pipefail
  steps:
    - mobile-build-ios:
        build-directory: 'build-mobile-production'
        bundle-id: 'co.audius.audiusmusic'
        env: '.env.prod'
    - when:
        condition:
          matches: { pattern: '^release.*$', value: << pipeline.git.branch >> }
        steps:
          - mobile-upload-ios:
              bundle-id: 'co.audius.audiusmusic'

mobile-build-upload-releasecandidate-ios:
  working_directory: ~/audius-client
  macos: # Run on osx so app can be created and signed.
    xcode: '14.0.0'
  environment:
    FL_OUTPUT_DIR: output
  shell: /bin/bash --login -o pipefail
  steps:
    - mobile-build-ios:
        build-directory: 'build-mobile-releasecandidate'
        bundle-id: 'co.audius.audiusmusic.releasecandidate'
        env: '.env.prod'
    - mobile-upload-ios:
        bundle-id: 'co.audius.audiusmusic.releasecandidate'

mobile-build-upload-staging-releasecandidate-ios:
  working_directory: ~/audius-client
  macos: # Run on osx so app can be created and signed.
    xcode: '14.0.0'
  environment:
    FL_OUTPUT_DIR: output
  shell: /bin/bash --login -o pipefail
  steps:
    - mobile-build-ios:
        build-directory: 'build-mobile-staging-releasecandidate'
        bundle-id: 'co.audius.audiusmusic.staging.releasecandidate'
        env: '.env.prod'
    - mobile-upload-ios:
        bundle-id: 'co.audius.audiusmusic.staging.releasecandidate'

mobile-build-upload-staging-android:
  working_directory: ~/audius-client
  resource_class: xlarge
  docker:
    - image: circleci/android:api-30-node
  steps:
    - mobile-build-android:
        build-directory: 'build-mobile-staging'
        build-type: 'bundleStagingRelease'
        bundle-id: 'co.audius.app.staging'
        track: 'alpha'
        remote-directory: 'audius-mobile-staging'
    - when:
        condition:
          matches: { pattern: '^main$', value: << pipeline.git.branch >> }
        steps:
          - mobile-upload-android:
              upload-type: 'staging'

mobile-build-upload-releasecandidate-android:
  working_directory: ~/audius-client
  resource_class: large
  docker:
    - image: circleci/android:api-30-node
  steps:
    - mobile-build-android:
        build-directory: 'build-mobile-releasecandidate'
        build-type: 'bundleReleaseCandidateRelease'
        bundle-id: 'co.audius.app.releasecandidate'
        track: 'alpha'
        remote-directory: 'audius-mobile-releasecandidate'
    - mobile-upload-android:
        upload-type: 'releaseCandidate'
    # - when:
    #     condition:
    #       matches: { pattern: '^release.*$', value: << pipeline.git.branch >> }
    #     steps:
    #       - mobile-upload-android:
    #           upload-type: 'releaseCandidate'

mobile-build-upload-production-android:
  working_directory: ~/audius-client
  resource_class: xlarge
  docker:
    - image: circleci/android:api-30-node
  steps:
    - mobile-build-android:
        build-directory: 'build-mobile-production'
        build-type: 'bundleRelease'
        bundle-id: 'co.audius.app'
        track: 'alpha'
        remote-directory: 'audius-mobile'
    - when:
        condition:
          matches: { pattern: '^release.*$', value: << pipeline.git.branch >> }
        steps:
          - mobile-upload-android:
              upload-type: 'alpha'
